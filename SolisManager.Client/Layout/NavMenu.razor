@using SolisManager.Shared.Interfaces
@inject IInverterManagerService inverterManagerService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <div class="navmenu-title">
            <img src="/favicon.png" alt="Solis Agile Manager" width="30px" height="30px"/>
            <a class="navbar-brand" href=""><ApplicationTitle/></a>
        </div>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <div class="nav-column">
    
        <nav class="nav flex-column">

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <MudIcon Icon="@Icons.Material.Filled.Home"/>
                    &nbsp;
                    Home
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="history">
                    <MudIcon Icon="@Icons.Material.Filled.List"/>
                    &nbsp;
                    History
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="comparison">
                    <MudIcon Icon="@Icons.Material.Filled.SsidChart"/>
                    &nbsp;
                    Comparison
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="consumption">
                    <MudIcon Icon="@Icons.Material.Filled.CurrencyPound"/>
                    &nbsp;
                    Costs
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="tools">
                    <MudIcon Icon="@Icons.Material.Filled.Construction"/>
                    &nbsp;
                    Tools
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="config">
                    <MudIcon Icon="@Icons.Material.Filled.Settings"/>
                    &nbsp;
                    Settings
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@SolisURL" target="_blank">
                    <MudIcon Icon="@Icons.Material.Filled.WbSunny"/>
                    &nbsp;
                    Solis Cloud
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="about">
                    <MudIcon Icon="@Icons.Material.Filled.Info"/>
                    &nbsp;
                    About
                </NavLink>
            </div>

            <VersionUpgrade>
                <div class="nav-item px-3" title="@($"Click to see v{context.NewVersion}")">
                    <NavLink class="nav-link" href="@context.LatestReleaseUrl" target="_blank">
                        <MudIcon Icon="@Icons.Material.Filled.Star"/>
                        &nbsp;
                        New Version Available
                    </NavLink>
                </div>
            </VersionUpgrade>

        </nav>

        <div class="dark-mode-toggle">
            <MudIcon Icon="@(DarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"@onclick="ToggleDarkMode"
                 Size="Size.Medium" Title="@(DarkMode ? "Switch to light mode" : "Switch to dark mode")"/>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool DarkMode { get; set; }
    [Parameter] public EventCallback<bool> DarkModeChanged { get; set; }
    
    private string SolisURL => !string.IsNullOrEmpty(inverterManagerService.InverterState?.StationId) ?
            $"https://www.soliscloud.com/#/station/stationDetails/generalSituation/{inverterManagerService.InverterState?.StationId}" : 
            "https://www.soliscloud.com/#/station";

    protected async Task ToggleDarkMode()
    {
        DarkMode = !DarkMode;
        await DarkModeChanged.InvokeAsync(DarkMode);
    }
    
    protected override async Task OnInitializedAsync()
    {
        await inverterManagerService.RefreshInverterState();

        await base.OnInitializedAsync();
    }

}