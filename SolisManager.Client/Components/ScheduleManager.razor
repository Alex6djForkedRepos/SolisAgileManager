@inject IDialogService dialogService

<div class="schedule-manager">
    <div>
        @StatusText
    </div>
    <MudButton OnClick="OpenScheduleDialog" Variant="UIConstants.MudVariant">Configure...</MudButton>
</div>

@code {
    [Parameter]
    public List<ScheduledAction>? Actions { get; set; }
    
    [Parameter]
    public EventCallback<List<ScheduledAction>> ActionsChanged { get; set; }

    private string StatusText => Actions == null || Actions.Count == 0 ? "No Scheduled Actions" : 
                        $"{Actions.Count} scheduled action{(Actions.Count > 1 ? "s":string.Empty)} ({Actions.Count(x => !x.Disabled)} active) defined";

    private async Task OpenScheduleDialog()
    {
        if (Actions == null)
            Actions = new();
        
        var options = new DialogOptions { MaxWidth = MaxWidth.ExtraLarge, BackdropClick = false };
        var parameters = new DialogParameters { { "ScheduledActions", Actions } };
        var dialog = await dialogService.ShowAsync<ScheduleDialog>("Scheduled Action", parameters, options);
        var result = await dialog.Result;

        if (result != null)
        {
            await ActionsChanged.InvokeAsync(Actions);
        }
    }
}