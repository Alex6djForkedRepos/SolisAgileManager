@if (Slot != null)
{
    <div class="slot-actions" title="@Slot.ActionReason">
        @foreach( var action in AvailableActions )
        {
            <ActionIcon Action="action" OnActionChanged="OnActionChanged"></ActionIcon>
        }
    </div>
}

@code {
    [Parameter]
    public OctopusPriceSlot? Slot { get; set; }

    [Parameter]
    public EventCallback<ChangeSlotActionRequest> OnChangeSlotAction { get; set; }
    
    private SlotAction[] AvailableActions = [];

    protected override void OnParametersSet()
    {
        if (Slot != null)
            AvailableActions = Enum.GetValues<SlotAction>().Except([Slot.ActionToExecute]).ToArray();
        else
            AvailableActions = [];
        
        base.OnParametersSet();
    }

    private async Task OnActionChanged(SlotAction newAction)
    {
        if (Slot != null)
        {
            var req = new ChangeSlotActionRequest { SlotStart = Slot.valid_from, NewAction = newAction };
            await OnChangeSlotAction.InvokeAsync(req);
        }
    }

}