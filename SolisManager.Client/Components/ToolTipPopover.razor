@if (TooltipContent != null || !string.IsNullOrEmpty(ToolTip))
{
    @if (_open)
    {
        <div @onclick="ToggleOpen" class="vh-100 vw-100 position-fixed"
             style="top: 0; left: 0; z-index: 1000; background-color:unset;">
        </div>
    }

    <div @onclick="ToggleOpen" title="@ToolTip" @onfocusout="ToggleOpen" style="@(PointerCursor ? "cursor:pointer;": string.Empty)">
        @ChildContent
        <MudPopover Open="_open" OverflowBehavior="OverflowBehavior.FlipAlways" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
            <div class="@ContentClass">
                @if (TooltipContent != null)
                {
                    <div class="tooltip-content">
                        @TooltipContent
                    </div>
                }
                else
                {
                    @ToolTip
                }
            </div>
        </MudPopover>
    </div>
}
else
{
    @ChildContent
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    
    [Parameter] public RenderFragment? TooltipContent { get; set; }
    
    [Parameter] public string ToolTip { get; set; } = string.Empty;
    
    [Parameter] public bool PointerCursor { get; set; }

    [CascadingParameter] public bool DarkMode { get; set; }

    private string ContentClass =>  "tooltip-text" + (DarkMode ? " tooltip-text-dark" : string.Empty);
    private bool TransparentOutside = false; 
    private bool _open = false;
    
    private void ToggleOpen() =>_open = !_open;

}