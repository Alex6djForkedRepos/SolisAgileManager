@using ApexCharts

@inherits ChartBase<ConsumptionChart.ChartItem>

<ErrorBoundary>
    @if (groupedData != null)
    {
        <div class="chart-area">
            <ApexChart @ref="chart"
                       TItem="ChartItem"
                       XAxisType="XAxisType.Datetime"
                       Options="@Options"
                       Height="@("100%")">

                <ApexPointSeries TItem="ChartItem"
                                 Items="@groupedData"
                                 Name="Cost"
                                 XValue="@(e => e.Key)"
                                 YValue="@(e => e.CostGBP)"
                                 SeriesType="SeriesType.Bar"
                                 Color="lightgrey"
                                 PointColor="e => GetColor(e)"/>
            </ApexChart>
        </div>
    }
</ErrorBoundary>

@code {
    [Parameter, EditorRequired]
    public IEnumerable<OctopusConsumption>? ChartData { get; set; }

    [Parameter, EditorRequired] 
    public Func<DateTime, object> GroupingSelector { get; set; } = e => e.Date;

    public class ChartItem
    {
        public object Key { get; init; }
        public decimal CostGBP { get; init; }
    }
    
    private IEnumerable<ChartItem>? groupedData = null;
    private string GetColor(ChartItem item) => item.CostGBP > 0 ? "firebrick" : "green";

    protected override Task OnParametersSetAsync()
    {
        groupedData = (ChartData ?? []) 
            .GroupBy(x => GroupingSelector(x.PeriodStart))
            .Select(x => new ChartItem
                {
                    Key = x.Key,
                    CostGBP = x.Sum(c => c.NetCost / 100M)
                })
            .ToList();

        return base.OnParametersSetAsync();
    }

    protected override void SetOptions(ApexChartOptions<ChartItem> options)
    {
        var yAxis = new List<YAxis>();

        yAxis.Add(new YAxis
        {
            Title = new AxisTitle { Text = "Cost (Â£)" },
            SeriesName = "Cost",
            DecimalsInFloat = 2
        });
        
        options.Yaxis = yAxis;
        options.Xaxis = new XAxis { Labels = new XAxisLabels { DatetimeUTC = false } };
    }
}