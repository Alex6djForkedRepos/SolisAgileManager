name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [mac, linux, windows]
        include: 
          - target: windows
            os: ubuntu-latest
            upload: windows
            runtime: win-x64
          - target: linux
            os: ubuntu-latest
            upload: linux
            runtime: linux-x64
          - target: mac
            os: macos-latest
            upload: macos
            runtime: osx-x64
     
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.2.0
      with:
        dotnet-version: 9.0.x

    - name: Install WASM-Tools
      run: dotnet workload install wasm-tools

    - name: Build SolisManager-${{matrix.target}}
      run: dotnet publish SolisManager.sln -c Release --runtime ${{matrix.runtime}} --self-contained true -p:PublishTrimmed=false -o ./artifacts/SolisManager-${{matrix.upload}} /p:Version=1.0.${{github.run_number}}
        
    - name: Zip the elease
      run: zip -r ./artifacts/SolisManager-${{matrix.upload}}.zip ./artifacts/SolisManager-${{matrix.upload}}/

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    strategy: 
      matrix: 
        target: [mac, linux, windows]
     
    steps:    
    - name: Create the Release
      id: create_release
      # Arbitrary target to create the release.
      if: ${{ github.event_name == 'push' }} && ${{matrix.target == 'linux'}}
      uses: actions/create-release@v1.1.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{ github.run_number }}
        release_name: Release 1.0.${{ github.run_number }}
        draft: false
        
    - name: Upload SolisManager-${{matrix.target}}
      if: ${{ github.event_name == 'push'}}
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/SolisManager-${{matrix.target}}.zip
        asset_name: SolisManager-${{matrix.target}}.zip
        asset_content_type: application/exe