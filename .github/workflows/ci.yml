name: SolisManagerBuild
on: 
  push:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)    
        required: false

jobs:
  relsease-solismanager:
    if: github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [mac, linux, windows, raspi]
        include: 
          - target: windows
            os: ubuntu-latest
            runtime: win-x64
          - target: linux
            os: ubuntu-latest
            runtime: linux-x64
          - target: mac
            os: macos-latest
            runtime: osx-x64
          - target: raspi
            os: ubuntu-latest
            runtime: linux-arm64
     
    steps:
    - name: Clone Repository (release)
      uses: actions/checkout@v3

    - name: Clone Repository (Custom Ref)
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.git-ref }}
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4.2.0
      with:
        dotnet-version: 9.0.x

    - name: Install WASM-Tools
      run: dotnet workload install wasm-tools

    - name: Build SolisManager-${{matrix.target}}
      run: dotnet publish SolisManager/SolisManager.csproj -c Release --runtime ${{matrix.runtime}} --self-contained true -p:PublishTrimmed=false --property:PublishDir=${{github.workspace}}/publish /p:Version=1.0.${{github.run_number}}
        
    - name: Zip the release
      run: |
           pushd ${{github.workspace}}/publish
           zip -r ${{github.workspace}}/publish/SolisManager-${{matrix.target}}.zip . 
           popd

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{github.workspace}}/publish/SolisManager-${{matrix.target}}.zip
        name: Release 1.0.${{ github.run_number }}
        tag_name: 1.0.${{ github.run_number }}
        body: 'To install via docker: `docker pull webreaper/solisagilemanager:1.0.${{ github.run_number }}`'
        make_latest: true

  build-docker:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [linux]
        include: 
          - target: linux
            os: ubuntu-latest
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build Docker for Dev (develop only)
        if: github.ref == 'refs/heads/develop'
        run: sh makedocker.sh dev

      - name: Build Docker for Release (master only)
        if: github.ref == 'refs/heads/main'
        run: sh makedocker.sh  "1.0.${{ github.run_number }}"

        # set up docker buildx for cross-platform builds

  build-docker-multiplat:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: 
        target: [linux]
        include: 
          - target: linux
            os: ubuntu-latest
            platform: linux/arm64
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./SolisAgileManager
          file: ./Dockerfile
          push: true
          provenance: false # avoids ECR failing on scans for attestation layers
          platforms: ${{ matrix.platform }}
          tags: alpha
          # labels: latest